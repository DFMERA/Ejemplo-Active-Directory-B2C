@using System.Security.Claims
@{
    ViewData["Title"] = "Home Page";
}

<h2>
    Add authorization using groups & group claims to an ASP.NET Core Web app thats signs-in users with the Microsoft identity platform
</h2>
<p>
    This sample shows how to build a .NET Core MVC Web app that uses Azure ADB2C Groups for authorization. It leverages the ASP.NET Core OpenID Connect middleware to sign-in users.
</p>
<img src="https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/b2f5abfdcf95b2a08c26b184331b32ed8b6ff36d/ReadmeFiles/web-app-calls-your-api.svg" />
<img src="https://raw.githubusercontent.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/b2f5abfdcf95b2a08c26b184331b32ed8b6ff36d/ReadmeFiles/Web-app-calls-Microsoft-Graph.svg" />

<h4 style="color:blue">Claims from the signed-in user's token</h4>

@{
    var user = ViewData["User"] as ClaimsPrincipal;
}

<table class="table table-striped table-bordered table-condensed table-hover">
    <tr>
        <th>ClaimType</th>
        <th>Value</th>
    </tr>

    @foreach (var claim in user.Claims)
    {
        <tr>
            @{
                if (claim.Type == "groups")
                {
                    <td><b>@claim.Type</b></td>
                }
                else
                {
                    <td>@claim.Type</td>
                }
            }

            <td>@claim.Value</td>
        </tr>
    }

</table>
<table class="table table-striped table-bordered table-condensed table-hover">
    <tr>
        <td colspan="2">Test API</td>
        <td colspan="2"></td>
    </tr>

    <tr>
        <td colspan="2">Response</td>
        <td colspan="2">@ViewData["ResultApi"]</td>
    </tr>

</table>

@{
    Dictionary<string, string> resultApiGraph = new Dictionary<string, string>();

    if (ViewData.ContainsKey("ResultApiGraph"))
    {
        resultApiGraph = ViewData["ResultApiGraph"] as Dictionary<string, string>;
    }

}

<table class="table table-striped table-bordered table-condensed table-hover">
    <tr>
        <td colspan="2">API Graph test</td>
        <td colspan="2"></td>
    </tr>

    @if (resultApiGraph != null)
    {
        @foreach (var group in resultApiGraph)
        {
            <tr>
                <td colspan="2">@group.Key</td>
                <td colspan="2">@group.Value</td>
            </tr>
        }
    }
</table>
